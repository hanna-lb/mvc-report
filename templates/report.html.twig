{# templates/report.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Rapporter{% endblock %}

{% block main %}
<h1>Rapporter</h1>

<article>
<h2>Kmom01</h2>
<p>
    Jag har viss erfarenhet av objektorienterad programmering sedan innan, dels från tidigare studier, dels från arbetslivserfarenhet. 
    Detta då jag läst två kurser i Java redan på gymnasiet samt en kurs i Java på universitetsnivå när jag tog min kandidatexamen. 
    Därefter har jag jobbat en del objektorienterat med python (där jag lärt mig på jobbet). Sedan nu under detta läsår har läst färdigt 
    en kurs i C# samt läser parallellt med denna kurs en fördjupningskurs i C#. Sedan skulle jag även vilja påstå att föregående kurs i 
    kurspaketet om databaser och javascript rörde på ytan av objektorientering.
</p>
<p>
    Inom PHP finns objekt och klasser. Ett objekt skapas utifrån en klass och detta objekt har olika attribut och metoder, där klassen är mallen för detta. 
    Det är i klassen som man definierar vilka attribut (variabler/properties) och metoder som objekt ska ha, det vill säga man sätter strukturen. 
    Metoderna är vad man kan nå utifrån för att bland annat ändra på olika värden på attribut i objektet. Objekt i sig är en instans av en klass, 
    och objektet instansieras i konstruktor-klassen i koden. 
</p>
<p>
    När jag började göra denna rapportsida var jag minst sagt förvirrad över kodstrukturen som används. Det krävdes en hel del komplettering 
    med googling och läsning av symfonys egna dokumentation för att greppa lite bättre vad som gör vad. Exempelvis behövde jag läsa lite mer på djupet hur 
    routing fungerar med annotering, då jag inte greppade först hur det fungerade. Jag vet ännu inte vad alla filer spelar för roll, och det krävdes trial and error 
    för att hitta vilken sökväg som ska användas för t.ex. css. Dessutom uppstod viss förvirring då dokumentationen för symfony och twig för vyer skiljer sig från hur 
    vi jobbade med twig i designkursen, där vi enligt symfony helst ska nyttja funktionaliteten för block. Det är åtminstone så jag tolkade det utifrån det faktum att 
    vi genererade en base.html.twig, vars syfte jag inte förstod alls förrän jag kollade symfony twig-dokumentationen.
</p>
<p>
    I och med att vi ännu inte har hunnit nyttja särdeles mycket PHP i kursen kan jag inte påstå att jag använt mig utav "PHP The Right Way" särskilt mycket ännu, 
    annat än att ögna igenom det i viss mån. Det känns som att det kommer vara mer relevant i kommande delar av kursen. Däremot tycker jag det ska bli spännande att 
    jobbat med enhetstestning, då det är något jag inte gjort särdeles mycket förut. Sedan känns kapitlet om databasinteraktion relevant, då det ger mig ännu bättre 
    förståelse varför vi separerade koden i databaskursen annat än för "bara" läsbarhetens skull.
</p>
<p>
    Då detta moment har repeterat nyttjandet av vyer och kontrollers på ytterligare ett sätt skulle jag vilja påstå att det också är mitt TIL utöver databasinteraktion,
     i och med att jag nu börjar förstå koncepten desto bättre. 
</p>

</article>

<article>
<h2>Kmom02</h2>
<p>Redovisningstext</p>
</article>

<article>
<h2>Kmom03</h2>
<p>Redovisningstext</p>
</article>

<article>
<h2>Kmom04</h2>
<p>Redovisningstext</p>
</article>

<article>
<h2>Kmom05</h2>
<p>Redovisningstext</p>
</article>

<article>
<h2>Kmom06</h2>
<p>Redovisningstext</p>
</article>

<article>
<h2>Kmom07/10</h2>
<p>Redovisningstext</p>
</article>

{% endblock %}
